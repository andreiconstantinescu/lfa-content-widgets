mixin gallery()
  .gallery
    - var arg = arguments
    - for (var i = 0; i < arg.length; i++) {
      - if (typeof(arg[i]) === 'string') {
          a(href=arg[i], data-lightbox="Album")
            - if (i === 0) {
                img(src=arg[0])
            - }
      - } else {
        - if (typeof(arg[i]) === 'object') {
          - var title = arg[i].title ? arg[i].title : ' ';
          a(href=arg[i].src, data-lightbox="Album", data-title=title)
            - if (i === 0) {
              - if (arg[0].tn) {
                  img(src=arg[0].tn)
              - } else {
                  img(src=arg[0].src)
              - }
            - }
        - } else {
            - throw new Error('invalid argumets for Lightbox widget.', arguments)
        - }
      - }
    - }

mixin kenburns() 
  .gallery-kenburns
    #kenburns-slideshow
    #kenburns-description
      #slide-title
    - var arg = arguments;
    - var imageLinks = [];
    - var titleLinks = [];
    
    - for (var i = 0; i < arg.length; i++) {
      - if (typeof arg[i] === 'string') {
        - imageLinks.push(arg[i]);
        - titleLinks.push(null);
      - }
      - else {
        - if (typeof arg[i] === 'object' && arg[i]) {
          - imageLinks.push(arg[i].src);
          - titleLinks[i] = arg[i].title;
        - } else {
          - throw new Error('invalid argumets for Ken Burns widget.', arguments)
        - }
      - }
    - }
    - imageLinks = JSON.stringify(imageLinks);
    - titleLinks = JSON.stringify(titleLinks);
    
    script.
      var imageLinks = JSON.parse('!{imageLinks}');
      var titles = JSON.parse('!{titleLinks}');
      $('#kenburns-slideshow').Kenburns({
        images: imageLinks,
        scale: 1,
        duration:8000,
        fadeSpeed:1200,
        ease3d:'cubic-bezier(0.445, 0.050, 0.550, 0.950)',
        onSlideComplete: function(){
          $('#slide-title').html(titles[this.getSlideIndex()]);
        }
      });  

mixin tooltip() 
  #tooltip-wrapper
    if (block)
      .img-wrapper
        block
    - var arg = arguments;
    - for (var i = 0; i < arg.length; i++) {
      - var cssToLoad = {};
      - var style = [];
      - arg[i].top ? cssToLoad.top = arg[i].top : '';
      - arg[i].bottom ? cssToLoad.bottom = arg[i].bottom : '';
      - arg[i].left ? cssToLoad.left = arg[i].left : '';
      - arg[i].right ? cssToLoad.right = arg[i].right : '';
      - for (entry in cssToLoad) {
          - style.push(entry + ':' + cssToLoad[entry]);
      - };
      - style.push('-webkit-transform:translate(-' + ((cssToLoad.top) || (cssToLoad.bottom)) + ',-' + ((cssToLoad.left) || (cssToLoad.right)) + ')');
      
      span.trigger(  
        class = 'trigger-' + i,  
        role = 'button', 
        data-toggle = 'popover', 
        data-html = true,
        data-template = arg[i].template ? arg[i].template : '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>',
        data-trigger = arg[i].trigger ? arg[i].trigger : 'click', 
        data-placement = arg[i].placement ? arg[i].placement : 'auto',
        title = arg[i].title ? arg[i].title : 'Title is missing!', 
        data-content = arg[i].content ? arg[i].content : 'Content is missing!',
        style = style.join(';')
      )
        - var symbol = arg[i].symbol || 'cricle-o'
        i.fa(class ='fa-' + symbol, class= arg[i].large ? 'fa-2x' : 'normal')
    - };
    script.
      $('.trigger').popover();
      
mixin parallax(path)
  .parallax(style="background-image: url('#{path}')")
    if block
      block
